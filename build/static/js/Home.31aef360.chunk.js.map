{"version":3,"file":"static/js/Home.31aef360.chunk.js","mappings":"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","sources":["hooks/useAxios.ts","components/Sort.tsx","hooks/usePizzas.ts","components/PizzaCard/PizzaCard.tsx","webpack://pizza/./src/components/Pagination/Pagination.module.scss?7fb8","components/Pagination/index.tsx","components/Categories.tsx","components/PizzaCard/PizzaSkeletonCard.tsx","pages/Home.tsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport function useAxios(callback: (...args: any[]) => Promise<void>){\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string>(\"\");\r\n\r\n  async function fetch(...args: any[]) {\r\n    try {\r\n      setIsLoading(true);\r\n      await callback(args);\r\n    } catch (err) {\r\n      setError((err as Error).message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n  return [fetch, isLoading, error];\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectorFilter, setSortObj } from \"../Redux/slices/filterSlice.ts\";\r\n\r\ntype Sort = {\r\n  title: string;\r\n  sort: string;\r\n};\r\n\r\nexport const selects: Sort[] = [\r\n  {\r\n    title: \"популярности (asc)\",\r\n    sort: \"rating\",\r\n  },\r\n  {\r\n    title: \"популярности (desc)\",\r\n    sort: \"rating\",\r\n  },\r\n  {\r\n    title: \"цене (asc)\",\r\n    sort: \"price\",\r\n  },\r\n  {\r\n    title: \"цене (desc)\",\r\n    sort: \"price\",\r\n  },\r\n  {\r\n    title: \"алфавиту (asc)\",\r\n    sort: \"title\",\r\n  },\r\n\r\n  {\r\n    title: \"алфавиту (desc)\",\r\n    sort: \"tit2le\",\r\n  },\r\n];\r\n\r\ntype Props = {\r\n  setType: (type: string) => void;\r\n};\r\n\r\nconst Sort: React.FC<Props> = ({ setType }) => {\r\n  const dispatch = useDispatch();\r\n  const { sort } = useSelector(selectorFilter);\r\n  const sortRef = React.useRef<HTMLDivElement>(null);\r\n  const [isShow, setIsShow] = useState(false);\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const index = selects.findIndex((select) => select.title === sort.title);\r\n    setSelectedIndex(index);\r\n  }, [sort]);\r\n\r\n  function clickSelect(index: number) {\r\n    if (selects[index].sort === \"title\") setType(\"string\");\r\n    else setType(\"number\");\r\n\r\n    dispatch(setSortObj(selects[index]));\r\n    setSelectedIndex(index);\r\n    setIsShow(!isShow);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    const handlePopup = (event: MouseEvent) => {\r\n      const _event = event as MouseEvent & { composedPath(): Node[] };\r\n      if (sortRef.current && !_event.composedPath().includes(sortRef.current)) {\r\n        setIsShow(false);\r\n        console.log(\"outside\");\r\n      }\r\n    };\r\n    document.body.addEventListener(\"click\", handlePopup);\r\n    return () => {\r\n      document.body.removeEventListener(\"click\", handlePopup);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"sort\" ref={sortRef}>\r\n      <div className=\"sort__label\">\r\n        <svg\r\n          width=\"10\"\r\n          height=\"6\"\r\n          viewBox=\"0 0 10 6\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n            fill=\"#2C2C2C\"\r\n          />\r\n        </svg>\r\n        <b>Сортировка по:</b>\r\n        <span onClick={() => setIsShow(!isShow)}>\r\n          {selects[selectedIndex].title}\r\n        </span>\r\n      </div>\r\n      <div className={isShow ? \"sort__popup visible\" : \"sort__popup\"}>\r\n        <ul>\r\n          {selects.map((select, index) => (\r\n            <li\r\n              key={index}\r\n              onClick={() => clickSelect(index)}\r\n              className={index === selectedIndex ? \"active\" : \"\"}\r\n            >\r\n              {select.title}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sort;\r\n","import { useMemo } from \"react\";\r\nimport { Item } from \"../Redux/slices/pizzasSlice.ts\";\r\nimport { Sort } from \"../Redux/slices/filterSlice.ts\";\r\n\r\nexport function useSort(array: Item[], sort: Sort, type: String) {\r\n  const sortedArray = useMemo(() => {\r\n    let sorted: Item[] = [];\r\n\r\n    if (type === \"number\") {\r\n      if (sort.title.includes(\"(asc)\")) {\r\n        sorted = array.sort((objA, objB) => objA[sort.sort] - objB[sort.sort]);\r\n      } else {\r\n        sorted = array.sort((objA, objB) => objB[sort.sort] - objA[sort.sort]);\r\n      }\r\n    } else {\r\n      if (sort.title.includes(\"(asc)\")) {\r\n        sorted = array.sort((objA, objB) =>\r\n          objA[sort.sort].localeCompare(objB[sort.sort])\r\n        );\r\n      } else {\r\n        sorted = array.sort((objA, objB) =>\r\n          objB[sort.sort].localeCompare(objA[sort.sort])\r\n        );\r\n      }\r\n    }\r\n\r\n    return sorted;\r\n  }, [array, sort]);\r\n  return sortedArray;\r\n}\r\nexport function useSearch(array: Item[], searchValue: string) {\r\n  const searchedArray = useMemo(() => {\r\n    if (searchValue)\r\n      return array.filter((item) =>\r\n        item.title.toLowerCase().includes(searchValue.toLowerCase())\r\n      );\r\n    return array;\r\n  }, [searchValue, array]);\r\n  return searchedArray;\r\n}\r\n\r\nexport function useCategory(array: Item[], sort: Sort, type: string, category: number, searchValue: string) {\r\n  const sortedArray = useSort(array, sort, type);\r\n  const filteredArray = useMemo(() => {\r\n    if (category === 0) {\r\n      return sortedArray;\r\n    }\r\n    return sortedArray.filter((item) => item.category === category);\r\n  }, [array, category, sort]);\r\n  return useSearch(filteredArray, searchValue);\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addItem, selectorFind } from \"../../Redux/slices/cardSlice.ts\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Item } from \"../../Redux/slices/cardSlice.ts\";\r\nimport { Item as ItemCart } from \"../../Redux/slices/pizzasSlice.js\";\r\ntype Props = {\r\n  item: ItemCart;\r\n};\r\n\r\nconst PizzaCard: React.FC<Props> = ({ item }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [sizeIndex, setSizeIndex] = useState<Number>(0);\r\n  const [typeIndex, setTypeIndex] = useState<Number>(0);\r\n  const typeNames: String[] = [\"Тонкое\", \"Традиционное\"];\r\n  const cartItem = useSelector(selectorFind(item.id));\r\n  const count = cartItem ? cartItem.count : 0;\r\n  function addCart() {\r\n    const cart: Item = {\r\n      id: item.id,\r\n      title: item.title,\r\n      price: item.price,\r\n      imageUrl: item.imageUrl,\r\n      type: String(typeNames[Number(typeIndex)]),\r\n      size: item.sizes[Number(sizeIndex)],\r\n      category: item.category,\r\n      rating: item.rating,\r\n      count: 0,\r\n    };\r\n\r\n    dispatch(addItem(cart));\r\n  }\r\n\r\n  return (\r\n    <div className=\"pizza-block__wrapper\">\r\n      <div className=\"pizza-block\">\r\n        <Link to={`/pizza/${item.id}`}>\r\n          <img className=\"pizza-block__image\" src={item.imageUrl} alt=\"Pizza\" />\r\n        </Link>\r\n        <h4 className=\"pizza-block__title\">{item.title}</h4>\r\n        <div className=\"pizza-block__selector\">\r\n          <ul>\r\n            {item.types.map((type: number, index: number) => (\r\n              <li\r\n                onClick={() => setTypeIndex(index)}\r\n                className={index === typeIndex ? \"active\" : \"\"}\r\n                key={index}\r\n              >\r\n                {typeNames[type]}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <ul>\r\n            {item.sizes.map((size: number, index: number) => (\r\n              <li\r\n                className={sizeIndex === index ? \"active\" : \"\"}\r\n                onClick={() => setSizeIndex(index)}\r\n                key={index}\r\n              >\r\n                {size} см.\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"pizza-block__bottom\">\r\n          <div className=\"pizza-block__price\">от {item.price} ₽</div>\r\n          <div className=\"button button--outline button--add\">\r\n            <svg\r\n              width=\"12\"\r\n              height=\"12\"\r\n              viewBox=\"0 0 12 12\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\r\n                fill=\"white\"\r\n              />\r\n            </svg>\r\n            <span onClick={() => addCart()}>Добавить</span>\r\n            {count > 0 && <i>{count}</i>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PizzaCard;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Pagination_root__H4mPD\"};","import React from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport styles from \"./Pagination.module.scss\";\r\nimport { setPage } from \"../../Redux/slices/filterSlice.ts\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nexport default function Pagination() {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ReactPaginate\r\n      className={styles.root}\r\n      breakLabel=\"...\"\r\n      nextLabel=\">\"\r\n      onPageChange={(e: { selected: number }) =>\r\n        dispatch(setPage(e.selected + 1))\r\n      }\r\n      pageRangeDisplayed={4}\r\n      pageCount={3}\r\n      previousLabel=\"<\"\r\n      renderOnZeroPageCount={null}\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectorFilter, setCategory } from \"../Redux/slices/filterSlice.ts\";\r\n\r\nexport default React.memo(function Categories() {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const dispatch = useDispatch();\r\n  const { filter } = useSelector(selectorFilter);\r\n\r\n  useEffect(() => {\r\n    setActiveIndex(filter);\r\n  }, [filter]);\r\n  const categories: String[] = [\r\n    \"Все\",\r\n    \"Мясные\",\r\n    \"Вегетарианская\",\r\n    \"Гриль\",\r\n    \"Острые\",\r\n    \"Закрытые\",\r\n  ];\r\n  return (\r\n    <div className=\"categories\">\r\n      <ul>\r\n        {categories.map((item, index) => {\r\n          return (\r\n            <li\r\n              key={index}\r\n              onClick={() => {\r\n                setActiveIndex(index);\r\n                dispatch(setCategory(index));\r\n              }}\r\n              className={activeIndex === index ? \"active\" : \"\"}\r\n            >\r\n              {item}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nexport default function PizzaSkeletonCard() {\r\n  return (\r\n    <ContentLoader\r\n      speed={0}\r\n      width={280}\r\n      height={490}\r\n      viewBox=\"0 0 280 490\"\r\n      backgroundColor=\"#f3f3f3\"\r\n      foregroundColor=\"#ecebeb\"\r\n    >\r\n      <circle cx=\"140\" cy=\"140\" r=\"120\" />\r\n      <rect x=\"0\" y=\"272\" rx=\"8\" ry=\"8\" width=\"280\" height=\"29\" />\r\n      <rect x=\"0\" y=\"309\" rx=\"8\" ry=\"8\" width=\"280\" height=\"88\" />\r\n      <rect x=\"1\" y=\"430\" rx=\"8\" ry=\"8\" width=\"95\" height=\"30\" />\r\n      <rect x=\"130\" y=\"430\" rx=\"24\" ry=\"24\" width=\"150\" height=\"45\" />\r\n    </ContentLoader>\r\n  );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { selects } from \"../components/Sort.tsx\";\r\nimport { useAxios } from \"../hooks/useAxios.ts\";\r\nimport { useCategory } from \"../hooks/usePizzas.ts\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { selectorFilter, setParams } from \"../Redux/slices/filterSlice.ts\";\r\nimport { fetchPizzas, selectorPizzas } from \"../Redux/slices/pizzasSlice.ts\";\r\nimport qs from \"qs\";\r\nimport { useAppDispatch } from \"../Redux/store.ts\";\r\nimport {\r\n  Sort,\r\n  PizzaCard,\r\n  Pagination,\r\n  Categories,\r\n  PizzaSkeletonCard,\r\n} from \"../components/components.ts\";\r\n\r\nexport default function Home() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useAppDispatch();\r\n  let [searchParams, setSearchParams] = useSearchParams();\r\n  const { items, status } = useSelector(selectorPizzas);\r\n  const { filter, sort, currentPage, searchValue } =\r\n    useSelector(selectorFilter);\r\n  const [type, setType] = React.useState<string>(\"number\");\r\n\r\n  const changeType = useCallback((type2: string) => {\r\n    setType(type2);\r\n  }, []);\r\n  // me\r\n  const [axiosPizzas, isLoadingPizzas, errorPizzas] = useAxios(\r\n    async (page: number) => {\r\n      // const response = await PizzaService.getAll(page);\r\n\r\n      dispatch(fetchPizzas(page));\r\n      // setPizzas(response.data);\r\n    }\r\n  );\r\n  const sortedArr = useCategory([...items], sort, type, filter, searchValue);\r\n\r\n  React.useEffect(() => {\r\n    if (searchParams.size > 0) {\r\n      const sort = selects.find((obj) => obj.sort === searchParams.get(\"sort\"));\r\n\r\n      dispatch(\r\n        setParams({\r\n          filter: Number(searchParams.get(\"filter\")),\r\n          currentPage: Number(searchParams.get(\"currentPage\")),\r\n          sort: sort || selects[0],\r\n          searchValue: \"\",\r\n        })\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    //@ts-ignore\r\n    axiosPizzas(currentPage);\r\n  }, [currentPage]);\r\n\r\n  React.useEffect(() => {\r\n    const queryString = qs.stringify({\r\n      sort: sort.sort,\r\n      filter,\r\n      currentPage,\r\n    });\r\n    navigate(`?${queryString}`);\r\n  }, [sort.sort, filter, currentPage]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"content__top\">\r\n        <Categories />\r\n        <Sort setType={changeType} />\r\n      </div>\r\n      <h2 className=\"content__title\">Все пиццы</h2>\r\n\r\n      {status === \"error\" ? (\r\n        <h2 style={{ padding: \"60px 0\", textAlign: \"center\" }}>\r\n          Произошла ошибка 😥\r\n        </h2>\r\n      ) : status === \"loading\" ? (\r\n        <div className=\"content__items\">\r\n          {[...Array(8)].map((_, index) => (\r\n            <PizzaSkeletonCard key={index} />\r\n          ))}{\" \"}\r\n        </div>\r\n      ) : (\r\n        <div className=\"content__items\">\r\n          {\" \"}\r\n          {sortedArr.map((item) => (\r\n            <PizzaCard key={item.id} item={item} />\r\n          ))}{\" \"}\r\n        </div>\r\n      )}\r\n\r\n      <Pagination />\r\n    </div>\r\n  );\r\n}\r\n"],"names":["useAxios","callback","isLoading","setIsLoading","useState","error","setError","async","_len","arguments","length","args","Array","_key","err","message","selects","title","sort","_ref","setType","dispatch","useDispatch","useSelector","selectorFilter","sortRef","React","isShow","setIsShow","selectedIndex","setSelectedIndex","useEffect","index","findIndex","select","handlePopup","event","_event","current","composedPath","includes","console","log","document","body","addEventListener","removeEventListener","_jsxs","className","ref","children","_jsx","width","height","viewBox","fill","xmlns","d","onClick","map","setSortObj","clickSelect","useCategory","array","type","category","searchValue","sortedArray","useMemo","sorted","objA","objB","localeCompare","useSort","filter","item","toLowerCase","useSearch","sizeIndex","setSizeIndex","typeIndex","setTypeIndex","typeNames","cartItem","selectorFind","id","count","Link","to","concat","src","imageUrl","alt","types","sizes","size","price","cart","String","Number","rating","addItem","addCart","Pagination","ReactPaginate","styles","root","breakLabel","nextLabel","onPageChange","e","setPage","selected","pageRangeDisplayed","pageCount","previousLabel","renderOnZeroPageCount","activeIndex","setActiveIndex","setCategory","PizzaSkeletonCard","ContentLoader","speed","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","Home","navigate","useNavigate","useAppDispatch","searchParams","setSearchParams","useSearchParams","items","status","selectorPizzas","currentPage","changeType","useCallback","type2","axiosPizzas","isLoadingPizzas","errorPizzas","fetchPizzas","page","sortedArr","find","obj","get","setParams","window","scrollTo","queryString","qs","Categories","Sort","style","padding","textAlign","_","PizzaCard"],"sourceRoot":""}