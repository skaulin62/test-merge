{"version":3,"file":"static/js/PizzaPage.578dc607.chunk.js","mappings":"2HAEO,SAASA,EAASC,GACvB,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAkB,IAC7CC,EAAOC,IAAYF,EAAAA,EAAAA,UAAiB,IAY3C,MAAO,CAVPG,iBACE,IACEJ,GAAa,GAAM,QAAAK,EAAAC,UAAAC,OAFCC,EAAI,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,EAAIE,GAAAJ,UAAAI,SAGlBZ,EAASU,EACjB,CAAE,MAAOG,GACPR,EAAUQ,EAAcC,QAC1B,CAAC,QACCZ,GAAa,EACf,CACF,EACeD,EAAWG,EAC5B,C,oGCVe,SAASW,IACtB,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,OAERC,EAAMC,GAAWC,EAAAA,SAIrB,CAAEC,SAAU,GAAIC,MAAO,GAAIC,MAAO,KAE9BC,EAAYC,EAAgBC,IAAc3B,EAAAA,EAAAA,IAC/CO,UACE,MAAMqB,QAAiBC,EAAAA,EAAaC,QAAQC,GAC5CX,EAAQQ,EAASI,KAAK,IAS1B,OALAX,EAAAA,WAAgB,KAEdI,EAAWR,EAAG,GACb,KAGDgB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SACvBR,GACCM,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gIACFT,GACFO,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kGAEJC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKK,IAAKnB,EAAKG,YACfc,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CACGlB,EAAG,OAAKE,EAAKI,UAEhBa,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,2DAAYhB,EAAKK,aAK9B,C","sources":["hooks/useAxios.ts","pages/PizzaPage.tsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport function useAxios(callback: (...args: any[]) => Promise<void>){\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string>(\"\");\r\n\r\n  async function fetch(...args: any[]) {\r\n    try {\r\n      setIsLoading(true);\r\n      await callback(args);\r\n    } catch (err) {\r\n      setError((err as Error).message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n  return [fetch, isLoading, error];\r\n}\r\n","import React from \"react\";\r\nimport { useAxios } from \"../hooks/useAxios.ts\";\r\nimport PizzaService from \"../API/PizzaService.ts\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useAppDispatch } from \"../Redux/store.ts\";\r\nimport { fetchPizzas } from \"../Redux/slices/pizzasSlice.js\";\r\n\r\nexport default function PizzaPage() {\r\n  const { id } = useParams();\r\n\r\n  const [item, setItem] = React.useState<{\r\n    imageUrl: string;\r\n    title: string;\r\n    price: number;\r\n  }>({ imageUrl: \"\", title: \"\", price: 0 });\r\n\r\n  const [axiosPizza, isLoadingPizza, errorPizza] = useAxios(\r\n    async (idItem: string) => {\r\n      const response = await PizzaService.getItem(idItem);\r\n      setItem(response.data);\r\n    }\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    //@ts-ignore\r\n    axiosPizza(id);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {errorPizza ? (\r\n        <h2>–ü–∏—Ü—Ü–∞ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å üòÖ</h2>\r\n      ) : isLoadingPizza ? (\r\n        <h2>–ó–∞–≥—Ä—É–∑–∫–∞ –ø–∏—Ü—Ü—ã üòÅ</h2>\r\n      ) : (\r\n        <>\r\n          <img src={item.imageUrl} />\r\n          <h2>\r\n            {id} || {item.title}\r\n          </h2>\r\n          <p>–°—Ç–æ–∏–º–æ—Å—Ç—å: {item.price}</p>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":["useAxios","callback","isLoading","setIsLoading","useState","error","setError","async","_len","arguments","length","args","Array","_key","err","message","PizzaPage","id","useParams","item","setItem","React","imageUrl","title","price","axiosPizza","isLoadingPizza","errorPizza","response","PizzaService","getItem","idItem","data","_jsx","className","children","_jsxs","_Fragment","src"],"sourceRoot":""}