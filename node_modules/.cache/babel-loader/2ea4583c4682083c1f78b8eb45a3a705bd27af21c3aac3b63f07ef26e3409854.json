{"ast":null,"code":"import{useState}from\"react\";export function useAxios(callback){const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(\"\");async function fetch(){try{setIsLoading(true);await callback(...arguments);}catch(err){setError(err.message);}finally{setIsLoading(false);}}return[fetch,isLoading,error];}","map":{"version":3,"names":["useState","useAxios","callback","isLoading","setIsLoading","error","setError","fetch","arguments","err","message"],"sources":["C:/Users/skaullin62/Desktop/ReactAppsTS/pizza/src/hooks/useAxios.ts"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport function useAxios(callback){\r\n  const [isLoading, setIsLoading] = useState<Boolean>(true);\r\n  const [error, setError] = useState<String>(\"\");\r\n\r\n  async function fetch(...args) {\r\n    try {\r\n      setIsLoading(true);\r\n      await callback(...args);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n  return [fetch, isLoading, error];\r\n}\r\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAEhC,MAAO,SAAS,CAAAC,QAAQA,CAACC,QAAQ,CAAC,CAChC,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGJ,QAAQ,CAAU,IAAI,CAAC,CACzD,KAAM,CAACK,KAAK,CAAEC,QAAQ,CAAC,CAAGN,QAAQ,CAAS,EAAE,CAAC,CAE9C,cAAe,CAAAO,KAAKA,CAAA,CAAU,CAC5B,GAAI,CACFH,YAAY,CAAC,IAAI,CAAC,CAClB,KAAM,CAAAF,QAAQ,CAAC,GAAAM,SAAO,CAAC,CACzB,CAAE,MAAOC,GAAG,CAAE,CACZH,QAAQ,CAACG,GAAG,CAACC,OAAO,CAAC,CACvB,CAAC,OAAS,CACRN,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CACA,MAAO,CAACG,KAAK,CAAEJ,SAAS,CAAEE,KAAK,CAAC,CAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}