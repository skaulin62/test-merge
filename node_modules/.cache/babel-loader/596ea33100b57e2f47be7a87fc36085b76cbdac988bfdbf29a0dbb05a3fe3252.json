{"ast":null,"code":"import{useState}from\"react\";export function useAxios(callback){const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(\"\");async function fetch(){try{setIsLoading(true);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}await callback(args);}catch(err){setError(err.message);}finally{setIsLoading(false);}}return[fetch,isLoading,error];}","map":{"version":3,"names":["useState","useAxios","callback","isLoading","setIsLoading","error","setError","fetch","_len","arguments","length","args","Array","_key","err","message"],"sources":["C:/Users/skaullin62/Desktop/ReactAppsTS/pizza/src/hooks/useAxios.ts"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport function useAxios(callback: (...args: any[]) => Promise<void>){\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string>(\"\");\r\n\r\n  async function fetch(...args: any[]) {\r\n    try {\r\n      setIsLoading(true);\r\n      await callback(args);\r\n    } catch (err) {\r\n      setError((err as Error).message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n  return [fetch, isLoading, error];\r\n}\r\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAEhC,MAAO,SAAS,CAAAC,QAAQA,CAACC,QAA2C,CAAC,CACnE,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGJ,QAAQ,CAAU,IAAI,CAAC,CACzD,KAAM,CAACK,KAAK,CAAEC,QAAQ,CAAC,CAAGN,QAAQ,CAAS,EAAE,CAAC,CAE9C,cAAe,CAAAO,KAAKA,CAAA,CAAiB,CACnC,GAAI,CACFH,YAAY,CAAC,IAAI,CAAC,CAAC,QAAAI,IAAA,CAAAC,SAAA,CAAAC,MAAA,CAFCC,IAAI,KAAAC,KAAA,CAAAJ,IAAA,EAAAK,IAAA,GAAAA,IAAA,CAAAL,IAAA,CAAAK,IAAA,IAAJF,IAAI,CAAAE,IAAA,EAAAJ,SAAA,CAAAI,IAAA,GAGxB,KAAM,CAAAX,QAAQ,CAACS,IAAI,CAAC,CACtB,CAAE,MAAOG,GAAG,CAAE,CACZR,QAAQ,CAAEQ,GAAG,CAAWC,OAAO,CAAC,CAClC,CAAC,OAAS,CACRX,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CACA,MAAO,CAACG,KAAK,CAAEJ,SAAS,CAAEE,KAAK,CAAC,CAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}