{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useMemo } from \"react\";\nexport function useSort(array, sort, type) {\n  _s();\n  for (let key of array[0]) {\n    console.log(key);\n  }\n  const sortedArray = useMemo(() => {\n    let sorted = [];\n    if (type === \"number\") {\n      if (sort.title.includes(\"(asc)\")) {\n        sorted = array.sort((objA, objB) => objA[sort.sort] - objB[sort.sort]);\n      } else {\n        sorted = array.sort((objA, objB) => objB[sort.sort] - objA[sort.sort]);\n      }\n    } else {\n      if (sort.title.includes(\"(asc)\")) {\n        sorted = array.sort((objA, objB) => objA[sort.sort].localeCompare(objB[sort.sort]));\n      } else {\n        sorted = array.sort((objA, objB) => objB[sort.sort].localeCompare(objA[sort.sort]));\n      }\n    }\n    return sorted;\n  }, [array, sort]);\n  return sortedArray;\n}\n_s(useSort, \"O277kNNipAM+CrHegm20Naxvnh4=\");\nexport function useSearch(array, searchValue) {\n  _s2();\n  const searchedArray = useMemo(() => {\n    if (searchValue) return array.filter(item => item.title.toLowerCase().includes(searchValue.toLowerCase()));\n    return array;\n  }, [searchValue, array]);\n  return searchedArray;\n}\n_s2(useSearch, \"0OlgBos/UCbT4+zgz2QHvUbeH5k=\");\nexport function useCategory(array, sort, type, category, searchValue) {\n  _s3();\n  const sortedArray = useSort(array, sort, type);\n  const filteredArray = useMemo(() => {\n    if (category === 0) {\n      return sortedArray;\n    }\n    return sortedArray.filter(item => item.category === category);\n  }, [array, category, sort]);\n  return useSearch(filteredArray, searchValue);\n}\n_s3(useCategory, \"5STuyNYc0jeqfpvbwBvOaHARqM8=\", false, function () {\n  return [useSort, useSearch];\n});","map":{"version":3,"names":["useMemo","useSort","array","sort","type","_s","key","console","log","sortedArray","sorted","title","includes","objA","objB","localeCompare","useSearch","searchValue","_s2","searchedArray","filter","item","toLowerCase","useCategory","category","_s3","filteredArray"],"sources":["C:/Users/skaullin62/Desktop/ReactAppsTS/pizza/src/hooks/usePizzas.ts"],"sourcesContent":["import { useMemo } from \"react\";\r\nimport { Item } from \"../Redux/slices/pizzasSlice.ts\";\r\nimport { Sort } from \"../Redux/slices/filterSlice.ts\";\r\n\r\nexport function useSort(array: Item[], sort: Sort, type: String) {\r\n  for(let key of array[0]) {\r\n    console.log(key);\r\n  }\r\n  const sortedArray = useMemo(() => {\r\n    let sorted: Item[] = [];\r\n\r\n    if (type === \"number\") {\r\n      if (sort.title.includes(\"(asc)\")) {\r\n        sorted = array.sort((objA, objB) => objA[sort.sort] - objB[sort.sort]);\r\n      } else {\r\n        sorted = array.sort((objA, objB) => objB[sort.sort] - objA[sort.sort]);\r\n      }\r\n    } else {\r\n      if (sort.title.includes(\"(asc)\")) {\r\n        sorted = array.sort((objA, objB) =>\r\n          objA[sort.sort].localeCompare(objB[sort.sort])\r\n        );\r\n      } else {\r\n        sorted = array.sort((objA, objB) =>\r\n          objB[sort.sort].localeCompare(objA[sort.sort])\r\n        );\r\n      }\r\n    }\r\n\r\n    return sorted;\r\n  }, [array, sort]);\r\n  return sortedArray;\r\n}\r\nexport function useSearch(array: Item[], searchValue: string) {\r\n  const searchedArray = useMemo(() => {\r\n    if (searchValue)\r\n      return array.filter((item) =>\r\n        item.title.toLowerCase().includes(searchValue.toLowerCase())\r\n      );\r\n    return array;\r\n  }, [searchValue, array]);\r\n  return searchedArray;\r\n}\r\n\r\nexport function useCategory(array: Item[], sort: Sort, type: string, category: number, searchValue: string) {\r\n  const sortedArray = useSort(array, sort, type);\r\n  const filteredArray = useMemo(() => {\r\n    if (category === 0) {\r\n      return sortedArray;\r\n    }\r\n    return sortedArray.filter((item) => item.category === category);\r\n  }, [array, category, sort]);\r\n  return useSearch(filteredArray, searchValue);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}