{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  totalPrice: 0,\n  items: []\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload.id);\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.items.push({\n          ...action.payload,\n          count: 1\n        });\n      }\n      state.totalPrice = state.items.reduce((acc, item) => acc + item.price * item.count, 0);\n    },\n    minusItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload.id);\n      if (findItem) {\n        findItem.count--;\n      }\n      state.totalPrice = state.items.reduce((acc, item) => acc + item.price * item.count, 0);\n    },\n    removeItem(state, action) {\n      state.items = state.items.filter(item => item.id !== action.payload.id);\n      state.totalPrice = state.items.reduce((acc, item) => acc + item.price * item.count, 0);\n    },\n    clearItems(state) {\n      state.items = [];\n      state.totalPrice = state.items.reduce((acc, item) => acc + item.price * item.count, 0);\n    }\n  }\n});\nexport const selectorCart = state => state.cart;\nexport const selectorFind = item => state => state.cart.items.find(obj => obj.id === item.id);\nexport const {\n  addItem,\n  removeItem,\n  clearItems,\n  minusItem\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","totalPrice","items","cartSlice","name","reducers","addItem","state","action","findItem","find","obj","id","payload","count","push","reduce","acc","item","price","minusItem","removeItem","filter","clearItems","selectorCart","cart","selectorFind","actions","reducer"],"sources":["C:/Users/skaullin62/Desktop/ReactAppsTS/pizza/src/Redux/slices/cardSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../store\";\r\n\r\n\r\nexport type Item = {\r\n  id: string,\r\n  imageUrl: string,\r\n  title: string,\r\n  type: string,\r\n  size: number,\r\n  price: number,\r\n  category: number,\r\n  rating: number,\r\n  count: number\r\n\r\n}\r\n\r\ninterface IItem {\r\n  totalPrice: number,\r\n  items: Item[],\r\n}\r\n\r\nconst initialState: IItem = {\r\n  totalPrice: 0,\r\n  items: [],\r\n\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addItem(state, action: PayloadAction<Item>) {\r\n      const findItem = state.items.find((obj) => obj.id === action.payload.id);\r\n      if (findItem) {\r\n        findItem.count++;\r\n      } else {\r\n        state.items.push({ ...action.payload, count: 1 });\r\n      }\r\n      state.totalPrice = state.items.reduce(\r\n        (acc, item) => acc + item.price * item.count,\r\n        0\r\n      );\r\n    },\r\n\r\n    minusItem(state, action: PayloadAction<Item>) {\r\n      const findItem = state.items.find((obj) => obj.id === action.payload.id);\r\n      if (findItem) {\r\n        findItem.count--;\r\n      }\r\n      state.totalPrice = state.items.reduce(\r\n        (acc, item) => acc + item.price * item.count,\r\n        0\r\n      );\r\n    },\r\n    removeItem(state, action: PayloadAction<Item>) {\r\n      state.items = state.items.filter((item) => item.id !== action.payload.id);\r\n      state.totalPrice = state.items.reduce(\r\n        (acc, item) => acc + item.price * item.count,\r\n        0\r\n      );\r\n    },\r\n    clearItems(state) {\r\n      state.items = [];\r\n      state.totalPrice = state.items.reduce(\r\n        (acc, item) => acc + item.price * item.count,\r\n        0\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectorCart = (state: RootState) => state.cart;\r\nexport const selectorFind = (item: Item) => (state: RootState) =>\r\n  state.cart.items.find((obj) => obj.id === item.id);\r\nexport const { addItem, removeItem, clearItems, minusItem } = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAsB7D,MAAMC,YAAmB,GAAG;EAC1BC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE;AAET,CAAC;AAED,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACRC,OAAOA,CAACC,KAAK,EAAEC,MAA2B,EAAE;MAC1C,MAAMC,QAAQ,GAAGF,KAAK,CAACL,KAAK,CAACQ,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MACxE,IAAIH,QAAQ,EAAE;QACZA,QAAQ,CAACK,KAAK,EAAE;MAClB,CAAC,MAAM;QACLP,KAAK,CAACL,KAAK,CAACa,IAAI,CAAC;UAAE,GAAGP,MAAM,CAACK,OAAO;UAAEC,KAAK,EAAE;QAAE,CAAC,CAAC;MACnD;MACAP,KAAK,CAACN,UAAU,GAAGM,KAAK,CAACL,KAAK,CAACc,MAAM,CACnC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACJ,KAAK,EAC5C,CACF,CAAC;IACH,CAAC;IAEDM,SAASA,CAACb,KAAK,EAAEC,MAA2B,EAAE;MAC5C,MAAMC,QAAQ,GAAGF,KAAK,CAACL,KAAK,CAACQ,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MACxE,IAAIH,QAAQ,EAAE;QACZA,QAAQ,CAACK,KAAK,EAAE;MAClB;MACAP,KAAK,CAACN,UAAU,GAAGM,KAAK,CAACL,KAAK,CAACc,MAAM,CACnC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACJ,KAAK,EAC5C,CACF,CAAC;IACH,CAAC;IACDO,UAAUA,CAACd,KAAK,EAAEC,MAA2B,EAAE;MAC7CD,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACoB,MAAM,CAAEJ,IAAI,IAAKA,IAAI,CAACN,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MACzEL,KAAK,CAACN,UAAU,GAAGM,KAAK,CAACL,KAAK,CAACc,MAAM,CACnC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACJ,KAAK,EAC5C,CACF,CAAC;IACH,CAAC;IACDS,UAAUA,CAAChB,KAAK,EAAE;MAChBA,KAAK,CAACL,KAAK,GAAG,EAAE;MAChBK,KAAK,CAACN,UAAU,GAAGM,KAAK,CAACL,KAAK,CAACc,MAAM,CACnC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACJ,KAAK,EAC5C,CACF,CAAC;IACH;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMU,YAAY,GAAIjB,KAAgB,IAAKA,KAAK,CAACkB,IAAI;AAC5D,OAAO,MAAMC,YAAY,GAAIR,IAAU,IAAMX,KAAgB,IAC3DA,KAAK,CAACkB,IAAI,CAACvB,KAAK,CAACQ,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKM,IAAI,CAACN,EAAE,CAAC;AACpD,OAAO,MAAM;EAAEN,OAAO;EAAEe,UAAU;EAAEE,UAAU;EAAEH;AAAU,CAAC,GAAGjB,SAAS,CAACwB,OAAO;AAE/E,eAAexB,SAAS,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}