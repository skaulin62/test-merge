{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";import{getCartFromLS,changeTotalPrice}from\"../../utils/cartLocalStorage.ts\";const initialState={totalPrice:changeTotalPrice(getCartFromLS()),items:getCartFromLS()};const cartSlice=createSlice({name:\"cart\",initialState,reducers:{addItem(state,action){const findItem=state.items.find(obj=>obj.id===action.payload.id);if(findItem){findItem.count++;}else{state.items.push({...action.payload,count:1});}state.totalPrice=changeTotalPrice(state.items);},minusItem(state,action){const findItem=state.items.find(obj=>obj.id===action.payload.id);if(findItem){if(findItem.count>0)findItem.count--;}state.totalPrice=changeTotalPrice(state.items);},removeItem(state,action){state.items=state.items.filter(item=>item.id!==action.payload.id);state.totalPrice=changeTotalPrice(state.items);},clearItems(state){state.items=[];state.totalPrice=changeTotalPrice(state.items);}}});export const selectorCart=state=>state.cart;export const selectorFind=id=>state=>state.cart.items.find(obj=>obj.id===id);export const{addItem,removeItem,clearItems,minusItem}=cartSlice.actions;export default cartSlice.reducer;","map":{"version":3,"names":["createSlice","getCartFromLS","changeTotalPrice","initialState","totalPrice","items","cartSlice","name","reducers","addItem","state","action","findItem","find","obj","id","payload","count","push","minusItem","removeItem","filter","item","clearItems","selectorCart","cart","selectorFind","actions","reducer"],"sources":["C:/Users/skaullin62/Desktop/ReactAppsTS/pizza/src/Redux/slices/cardSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../store\";\r\nimport {getCartFromLS, changeTotalPrice} from \"../../utils/cartLocalStorage.ts\";\r\nimport { stat } from \"fs\";\r\n\r\n\r\nexport type Item = {\r\n  id: string,\r\n  imageUrl: string,\r\n  title: string,\r\n  type: string,\r\n  size: number,\r\n  price: number,\r\n  category: number,\r\n  rating: number,\r\n  count: number\r\n\r\n}\r\n\r\ninterface IItem {\r\n  totalPrice: number,\r\n  items: Item[],\r\n}\r\n\r\nconst initialState: IItem = {\r\n  totalPrice: changeTotalPrice(getCartFromLS()),\r\n  items: getCartFromLS()\r\n\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addItem(state, action: PayloadAction<Item>) {\r\n      const findItem = state.items.find((obj) => obj.id === action.payload.id);\r\n      if (findItem) {\r\n        findItem.count++;\r\n      } else {\r\n        state.items.push({ ...action.payload, count: 1 });\r\n      }\r\n      state.totalPrice =changeTotalPrice(state.items)\r\n    },\r\n\r\n    minusItem(state, action: PayloadAction<Item>) {\r\n      const findItem = state.items.find((obj) => obj.id === action.payload.id);\r\n      if (findItem) {\r\n        if(findItem.count > 0)\r\n        findItem.count--;\r\n      }\r\n      state.totalPrice =changeTotalPrice(state.items)\r\n    },\r\n    removeItem(state, action: PayloadAction<Item>) {\r\n      state.items = state.items.filter((item) => item.id !== action.payload.id);\r\n      state.totalPrice =changeTotalPrice(state.items)\r\n    },\r\n    clearItems(state) {\r\n      state.items = [];\r\n      state.totalPrice =changeTotalPrice(state.items)\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectorCart = (state: RootState) => state.cart;\r\nexport const selectorFind = (id: string) => (state: RootState) =>\r\n  state.cart.items.find((obj) => obj.id === id);\r\nexport const { addItem, removeItem, clearItems, minusItem } = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,OAASA,WAAW,KAAuB,kBAAkB,CAE7D,OAAQC,aAAa,CAAEC,gBAAgB,KAAO,iCAAiC,CAsB/E,KAAM,CAAAC,YAAmB,CAAG,CAC1BC,UAAU,CAAEF,gBAAgB,CAACD,aAAa,CAAC,CAAC,CAAC,CAC7CI,KAAK,CAAEJ,aAAa,CAAC,CAEvB,CAAC,CAED,KAAM,CAAAK,SAAS,CAAGN,WAAW,CAAC,CAC5BO,IAAI,CAAE,MAAM,CACZJ,YAAY,CACZK,QAAQ,CAAE,CACRC,OAAOA,CAACC,KAAK,CAAEC,MAA2B,CAAE,CAC1C,KAAM,CAAAC,QAAQ,CAAGF,KAAK,CAACL,KAAK,CAACQ,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,EAAE,GAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC,CACxE,GAAIH,QAAQ,CAAE,CACZA,QAAQ,CAACK,KAAK,EAAE,CAClB,CAAC,IAAM,CACLP,KAAK,CAACL,KAAK,CAACa,IAAI,CAAC,CAAE,GAAGP,MAAM,CAACK,OAAO,CAAEC,KAAK,CAAE,CAAE,CAAC,CAAC,CACnD,CACAP,KAAK,CAACN,UAAU,CAAEF,gBAAgB,CAACQ,KAAK,CAACL,KAAK,CAAC,CACjD,CAAC,CAEDc,SAASA,CAACT,KAAK,CAAEC,MAA2B,CAAE,CAC5C,KAAM,CAAAC,QAAQ,CAAGF,KAAK,CAACL,KAAK,CAACQ,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,EAAE,GAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC,CACxE,GAAIH,QAAQ,CAAE,CACZ,GAAGA,QAAQ,CAACK,KAAK,CAAG,CAAC,CACrBL,QAAQ,CAACK,KAAK,EAAE,CAClB,CACAP,KAAK,CAACN,UAAU,CAAEF,gBAAgB,CAACQ,KAAK,CAACL,KAAK,CAAC,CACjD,CAAC,CACDe,UAAUA,CAACV,KAAK,CAAEC,MAA2B,CAAE,CAC7CD,KAAK,CAACL,KAAK,CAAGK,KAAK,CAACL,KAAK,CAACgB,MAAM,CAAEC,IAAI,EAAKA,IAAI,CAACP,EAAE,GAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC,CACzEL,KAAK,CAACN,UAAU,CAAEF,gBAAgB,CAACQ,KAAK,CAACL,KAAK,CAAC,CACjD,CAAC,CACDkB,UAAUA,CAACb,KAAK,CAAE,CAChBA,KAAK,CAACL,KAAK,CAAG,EAAE,CAChBK,KAAK,CAACN,UAAU,CAAEF,gBAAgB,CAACQ,KAAK,CAACL,KAAK,CAAC,CACjD,CACF,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAmB,YAAY,CAAId,KAAgB,EAAKA,KAAK,CAACe,IAAI,CAC5D,MAAO,MAAM,CAAAC,YAAY,CAAIX,EAAU,EAAML,KAAgB,EAC3DA,KAAK,CAACe,IAAI,CAACpB,KAAK,CAACQ,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,EAAE,GAAKA,EAAE,CAAC,CAC/C,MAAO,MAAM,CAAEN,OAAO,CAAEW,UAAU,CAAEG,UAAU,CAAEJ,SAAU,CAAC,CAAGb,SAAS,CAACqB,OAAO,CAE/E,cAAe,CAAArB,SAAS,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}