{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport { useMemo } from \"react\";\nexport function useSort(array, sort, type) {\n  _s();\n  const sortedArray = useMemo(() => {\n    let sorted = [];\n    if (type === \"number\") {\n      if (sort.title.includes(\"(asc)\")) {\n        sorted = array.sort((objA, objB) => objA[sort.sort] - objB[sort.sort]);\n      } else {\n        sorted = array.sort((objA, objB) => objB[sort.sort] - objA[sort.sort]);\n      }\n    } else {\n      if (sort.title.includes(\"(asc)\")) {\n        sorted = array.sort((objA, objB) => objA[sort.sort].localeCompare(objB[sort.sort]));\n      } else {\n        sorted = array.sort((objA, objB) => objB[sort.sort].localeCompare(objA[sort.sort]));\n      }\n    }\n    return sorted;\n  }, [array, sort]);\n  return sortedArray;\n}\n_s(useSort, \"O277kNNipAM+CrHegm20Naxvnh4=\");\nexport function useSearch(array, searchValue) {\n  _s2();\n  const searchedArray = useMemo(() => {\n    if (searchValue) return array.filter(item => item.toLowerCase().includes(searchValue.toLowerCase()));\n    return array;\n  }, [searchValue, array]);\n  return searchedArray;\n}\n_s2(useSearch, \"0OlgBos/UCbT4+zgz2QHvUbeH5k=\");\nexport function useCategory(array, sort, type, category, searchValue) {\n  _s4();\n  var _s3 = $RefreshSig$();\n  const sortedArray = useSort(array, sort, type);\n  const filteredArray = _s3(useMemo(_s3(() => {\n    _s3();\n    const filteredAndSearched = [];\n    if (category === 0) {\n      return filteredAndSearched = useSearch(sortedArray, searchValue);\n    }\n    return;\n    sortedArray.filter(item => item.category === category);\n  }, \"z0oR38xO1fixMDreUXVqYpRp3Wk=\", false, function () {\n    return [useSearch];\n  }), [array, category, sort]), \"z0oR38xO1fixMDreUXVqYpRp3Wk=\", false, function () {\n    return [useSearch];\n  });\n  return filteredArray;\n}\n_s4(useCategory, \"MaOIgJoe0CttOQf9tQyzjnDCuT0=\", false, function () {\n  return [useSort];\n});","map":{"version":3,"names":["useMemo","useSort","array","sort","type","_s","sortedArray","sorted","title","includes","objA","objB","localeCompare","useSearch","searchValue","_s2","searchedArray","filter","item","toLowerCase","useCategory","category","_s4","_s3","$RefreshSig$","filteredArray","filteredAndSearched"],"sources":["C:/Users/skaullin62/Desktop/ReactAppsTS/pizza/src/hooks/usePizzas.js"],"sourcesContent":["import { useMemo } from \"react\";\r\n\r\nexport function useSort(array, sort, type) {\r\n  const sortedArray = useMemo(() => {\r\n    let sorted = [];\r\n    if (type === \"number\") {\r\n      if (sort.title.includes(\"(asc)\")) {\r\n        sorted = array.sort((objA, objB) => objA[sort.sort] - objB[sort.sort]);\r\n      } else {\r\n        sorted = array.sort((objA, objB) => objB[sort.sort] - objA[sort.sort]);\r\n      }\r\n    } else {\r\n      if (sort.title.includes(\"(asc)\")) {\r\n        sorted = array.sort((objA, objB) =>\r\n          objA[sort.sort].localeCompare(objB[sort.sort])\r\n        );\r\n      } else {\r\n        sorted = array.sort((objA, objB) =>\r\n          objB[sort.sort].localeCompare(objA[sort.sort])\r\n        );\r\n      }\r\n    }\r\n\r\n    return sorted;\r\n  }, [array, sort]);\r\n  return sortedArray;\r\n}\r\nexport function useSearch(array, searchValue) {\r\n  const searchedArray = useMemo(() => {\r\n    if (searchValue)\r\n      return array.filter((item) =>\r\n        item.toLowerCase().includes(searchValue.toLowerCase())\r\n      );\r\n    return array;\r\n  }, [searchValue, array]);\r\n  return searchedArray;\r\n}\r\n\r\nexport function useCategory(array, sort, type, category, searchValue) {\r\n  const sortedArray = useSort(array, sort, type);\r\n  const filteredArray = useMemo(() => {\r\n    const filteredAndSearched = [];\r\n    if (category === 0) {\r\n      return (filteredAndSearched = useSearch(sortedArray, searchValue));\r\n    }\r\n    return;\r\n    sortedArray.filter((item) => item.category === category);\r\n  }, [array, category, sort]);\r\n  return filteredArray;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}